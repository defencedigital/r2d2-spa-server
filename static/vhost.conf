server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2 default_server;
  root /var/www/html;
  server_name _;

  # CONFIG: SSL
  ssl_certificate /etc/ssl/certs/self-signed.crt;
  ssl_certificate_key /etc/ssl/private/self-signed.key;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  # Below disabled due to "ssl_stapling" ignored, issuer certificate not found for certificate "/etc/ssl/certs/self-signed.crt"
  # ssl_stapling on;
  # ssl_stapling_verify on;

  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  # ENDOF CONFIG: SSL

  add_header "X-UA-Compatible" "IE=Edge,chrome=1";


  # CONFIG: GZIP
  gzip on;
  gzip_comp_level 9;
  gzip_types text/plain application/xml application/json application/javascript application/x-javascript text/javascript text/xml text/css;
  # ENDOF CONFIG: GZIP

  # CONFIG: GENERAL
  etag off;
  # EOFCONFIG: GENERAL


  index index.html index.htm;

  location / {
    gzip_static on; # Enable already compressed files
  }

  # I am not expiring html and json purposedly - in the event of website rebuild
  # the chunks names change. If browser cached index.html which refers
  # to non-existent chunks - user will not be able to access the website
  location ~*  \.(js|css)$ {
    expires max;
  }

  location ~*  \.(gif|ico|png|jpg|jpeg|woff|woff2|ttf|otf|svg)$ {
    expires 90d;
  }
}
